---
    - hosts: all
      become: true
      roles:
        - common

      vars_prompt:
        - name: domain
          prompt: "Enter your domain name (without http://) or IP address."
          private: no

        - name: media_folder
          prompt: "Which folder would you like to store your files in?"
          private: no
          default: "~/courselit-data"

        - name: mongo_user_name
          prompt: "Specify a username for the database. Keep it safe for future maintanences."
          private: no

        - name: mongo_password
          prompt: "Specify the password for the above user. Keep it safe for future maintanences."

        - name: jwt_secret
          prompt: "Specify a secret string which will be used to hash password. Keep it safe for future maintanences."

        - name: jwt_expires
          prompt: "How long should an access token stay valid? It keeps your users logged in. Examples (2d or 1h or 3y)."
          private: no
          default: "14d"

        - name: docker_image_version
          prompt: "Which version would you like to deploy? Press enter if you do not know."
          private: no
          default: "latest"

      tasks:
        - name: copy docker compose files
          copy:
            src: docker
            dest: "{{ ansible_env.HOME }}"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: 0644

        - name: Run Docker compose
          docker_compose:
            project_name: courselit
            project_src: "{{ ansible_env.HOME }}/docker"
            files:
                - "docker-compose.yml"
            build: no
            pull: yes
          register: output
          environment:
            SITE_URL: http://{{ domain }}
            MEDIA_FOLDER: "{{ media_folder }}"
            MONGO_ROOT_USERNAME: "{{ mongo_user_name }}"
            MONGO_ROOT_PASSWORD: "{{ mongo_password }}"
            DB_CONNECTION_STRING: "mongodb://{{ mongo_user_name }}:{{ mongo_password }}@db"
            JWT_SECRET: "{{ jwt_secret }}"
            JWT_EXPIRES_IN: "{{ jwt_expires }}"